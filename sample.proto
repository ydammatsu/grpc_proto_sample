// バージョン定義
// 基本的に "proto3" を指定
syntax = "proto3";

// パッケージ定義(よしなに名付ける)
package sample;

// デフォルトで使えない型をインポートしたい時はインポートする
import "google/protobuf/timestamp.proto";

// サービスとサービスが持つメソッドを定義
service FileStorage {
    // 書き方
    // rpc メソッド名 (マイクロサービスに送るメッセージの型) returns (マイクロサービスが返すメッセージの型)

    // ファイルのアップロード用メソッド
    // ファイル名・ファイルの中身を送る => ファイルを保存した日時・エラーを返す。
    rpc Upload (UploadRequest) returns (UploadResponse);

    // ファイルのダウンロード用メソッド
    // ファイルのIDを送る => ファイルのバイナリ・拡張子・エラーを返す。
    rpc Download (DownloadRequest) returns (DownloadResponse);

    // ※ 新たなメソッドを生やしたいときは上記rpcを増やしていけば良い。
    // ※ ストリーミングを使用する場合は メッセージの手前に stream とつけるだけで良い
}

// メッセージ型
// `型 フィールド名 = フィールド番号;` と指定する
// ※ フィールド番号はユニークであればなんでも良いが基本は連番で良い
// ※ boolean や Enum や 配列も型として定義できる。
message UploadRequest {
    bytes file_body = 1;
    string file_name = 2;
}

message UploadResponse {
    google.protobuf.Timestamp created_at = 1;
    ErrorType error = 3;
}

message DownloadRequest {
  string file_name = 1;
}

message DownloadResponse {
  bytes file_body = 1;
  ErrorType error = 3;
}

// Enum も設定できる。
enum ErrorType {
  NO_ERROR = 0;
  UNKNOWN_ERROR = 1;
  VALIDATION_ERROR = 2;
}
